{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.NODE_ENV === 'production' ? '/api' : 'http://localhost:8000/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000\n});\napi.interceptors.response.use(response => response.data, error => {\n  var _error$response;\n  console.error('API Error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n  throw error;\n});\nexport default {\n  uploadGuideline: file => {\n    const formData = new FormData();\n    formData.append('file', file);\n    return api.post('/upload-guideline', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  },\n  downloadImages: data => {\n    return api.post('/download-images', data);\n  },\n  analyzeImages: data => {\n    return api.post('/analyze-images', data);\n  },\n  getJobStatus: jobId => {\n    return api.get(`/job-status/${jobId}`);\n  },\n  healthCheck: () => {\n    return api.get('/health');\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","process","env","NODE_ENV","api","create","baseURL","timeout","interceptors","response","use","data","error","_error$response","console","message","uploadGuideline","file","formData","FormData","append","post","headers","downloadImages","analyzeImages","getJobStatus","jobId","get","healthCheck"],"sources":["/Users/marlonmsalom/Desktop/surrogates_ai_images/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.NODE_ENV === 'production' \n  ? '/api' \n  : 'http://localhost:8000/api';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000,\n});\n\napi.interceptors.response.use(\n  (response) => response.data,\n  (error) => {\n    console.error('API Error:', error.response?.data || error.message);\n    throw error;\n  }\n);\n\nexport default {\n  uploadGuideline: (file) => {\n    const formData = new FormData();\n    formData.append('file', file);\n    \n    return api.post('/upload-guideline', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n  },\n\n  downloadImages: (data) => {\n    return api.post('/download-images', data);\n  },\n\n  analyzeImages: (data) => {\n    return api.post('/analyze-images', data);\n  },\n\n  getJobStatus: (jobId) => {\n    return api.get(`/job-status/${jobId}`);\n  },\n\n  healthCheck: () => {\n    return api.get('/health');\n  },\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GACtD,MAAM,GACN,2BAA2B;AAE/B,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,YAAY;EACrBO,OAAO,EAAE;AACX,CAAC,CAAC;AAEFH,GAAG,CAACI,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC1BD,QAAQ,IAAKA,QAAQ,CAACE,IAAI,EAC1BC,KAAK,IAAK;EAAA,IAAAC,eAAA;EACTC,OAAO,CAACF,KAAK,CAAC,YAAY,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,KAAIC,KAAK,CAACG,OAAO,CAAC;EAClE,MAAMH,KAAK;AACb,CACF,CAAC;AAED,eAAe;EACbI,eAAe,EAAGC,IAAI,IAAK;IACzB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;IAE7B,OAAOb,GAAG,CAACiB,IAAI,CAAC,mBAAmB,EAAEH,QAAQ,EAAE;MAC7CI,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;EACJ,CAAC;EAEDC,cAAc,EAAGZ,IAAI,IAAK;IACxB,OAAOP,GAAG,CAACiB,IAAI,CAAC,kBAAkB,EAAEV,IAAI,CAAC;EAC3C,CAAC;EAEDa,aAAa,EAAGb,IAAI,IAAK;IACvB,OAAOP,GAAG,CAACiB,IAAI,CAAC,iBAAiB,EAAEV,IAAI,CAAC;EAC1C,CAAC;EAEDc,YAAY,EAAGC,KAAK,IAAK;IACvB,OAAOtB,GAAG,CAACuB,GAAG,CAAC,eAAeD,KAAK,EAAE,CAAC;EACxC,CAAC;EAEDE,WAAW,EAAEA,CAAA,KAAM;IACjB,OAAOxB,GAAG,CAACuB,GAAG,CAAC,SAAS,CAAC;EAC3B;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}